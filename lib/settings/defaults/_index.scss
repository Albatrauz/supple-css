/*  =========================================================================
    settings.defaults
    Supple default variables. Redefine and override them with your
    application-level variables.
    ========================================================================= */

/*  Baseline
    As per:
    https://builttoadapt.io/intro-to-the-8-point-grid-system-d2573cde8632
    https://medium.freecodecamp.org/8-point-grid-typography-on-the-web-be5dc97db6bc
    ========================================================================= */

$baseline: 8px !default;



/*  Spacing
    Multiply our `$baseline` to new spacing variables for
    more transparency & consistency.
    ========================================================================= */

/**
 * How many lines should our spacing units span?
 * Each value should be an unitless integer.
 */
$space-factor-base: 3 !default; // 24px
$space-factor-tiny: 1 !default; // 8px
$space-factor-small: 2 !default; // 16px
$space-factor-large: 6 !default; // 48px
$space-factor-huge: 12 !default; // 96px


/**
 * Spacing values are determined based on your projectâ€™s global baseline grid.
 * It is not recommended that you modify these following variables because it
 * can break your vertical rhythm.
 */
$space-base: $baseline * $space-factor-base;
$space-tiny: $baseline * $space-factor-tiny;
$space-small: $baseline * $space-factor-small;
$space-large: $baseline * $space-factor-large;
$space-huge: $baseline * $space-factor-huge;


/**
 * Static breakpoint variable for use in retainers & breakpoints
 */
$static-breakpoint-size: 1280px !default;



/*  Typography
    ========================================================================= */

$font-size: 16px !default;
$line-height: $space-base !default;
$line-height-ratio: $line-height/$font-size !default;



/*  Namespace
    Would you like supple classes to be used with a different namespace?
    ========================================================================= */

$responsive-modifier: unquote('\\@') !default;



/*  Responsive
    Used in conjunction with Sass MQ: https://sass-mq.github.io/sass-mq/
    ========================================================================= */

$static-breakpoint: wall !default;

$breakpoints: (
  palm: 320px,
  lap: 640px,
  desk: 960px,
  wall: $static-breakpoint-size
) !default;

$show-breakpoints: () !default;


/**
 * Load sass-mq framework
 */
@use
  '../../../node_modules/sass-mq/mq' with (
    $mq-breakpoints: $breakpoints,
    $mq-show-breakpoints: $show-breakpoints,
    $mq-static-breakpoint: $static-breakpoint,
  );



/*  Misc
    ========================================================================= */

/**
 * When enabled this setting ensures fallbacks in our rem mixins
 */
$rem-fallback: false !default;



/*  Checks
    A couple of checks for correct formatting of variables in this file
    ========================================================================= */

/**
 * Check that the chosen font rules are pixel numbers.
 */
@each $_font-globals in $font-size $line-height {
  @if (type-of($_font-globals) == number) {
    @if (unit($_font-globals) != 'px') {
      @error '`#{$_font-globals}` needs to be a pixel value.';
    }
  } @else {
    @error '`#{$_font-globals}` needs to be a number.';
  }
}


/**
 * Check that the chosen size factors are unitless, integer numbers.
 */
@each $_spacing-unit in $space-factor-base $space-factor-tiny $space-factor-small $space-factor-large $space-factor-huge {
  @if (type-of($_spacing-unit) == number) {
    @if (unitless($_spacing-unit) == false) {
      @error '`#{$_spacing-unit}` needs to be unitless.';
    }
    @if ($_spacing-unit != ceil($_spacing-unit)) {
      @error '`#{$_spacing-unit}` needs to be an integer.';
    }
  } @else {
    @error '`#{$_spacing-unit}` needs to be a number.';
  }
}
