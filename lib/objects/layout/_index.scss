/*  =========================================================================
    objects.layout
    Fluid and nestable layout system based on flexbox.
    ========================================================================= */

/*  Use rules
    `@use` everything you need here from other files. Variables, mixins &
    other includes.
    ========================================================================= */

/**
 * Forward the variables to the parent stylesheet
 */
@forward './variables';


/**
 * Use the settings & tools in this sheet
 */
@use './variables';
@use './tools';



/*  Module code
    ========================================================================= */

/**
 * All content must be contained within child `layout__cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */
.o-layout {
  --o-layout-columns: 12;
  --o-layout-colspan: var(--o-layout-columns);
  display: flex; /* [1] */
  flex-flow: row wrap;
  padding: 0; /* [1] */
  margin-left: 0; /* [1] */
  list-style: none; /* [1] */
}


/**
 * Element: cell
 * No explicit width by default. Rely on combining `layout__cell` with a dimension
 * utility or a component class that extends 'layout'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `layout__cell` container
 * 3. Fallback for browsers which do not support CSS custom properties
 */
.o-layout__cell {
  flex-basis: 100%; /* [3] */
  flex-basis: calc(100% / var(--o-layout-columns) * var(--o-layout-colspan)); /* [1] */
  min-width: 0; /* [2] */
}

/**
 * Element modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `layout` object.
 */
.o-layout__cell--center {
  margin-left: auto;
  margin-right: auto;
}


/**
 * Element modifier: Make a cell shrink wrap its content.
 */
.o-layout__cell--fit {
  @include tools.fit;
}


/**
 * Element modifier: Make a cell fill the remaining space.
 */
.o-layout__cell--fill {
  @include tools.fill;
}


/**
 * Modifier: center align all layout cells
 */
.o-layout--align-center {
  justify-content: center;
}


/**
 * Modifier: right align all layout cells
 */
.o-layout--align-right {
  justify-content: flex-end;
}


/**
 * Modifier: middle-align layout cells
 */
.o-layout--align-middle {
  align-items: center;
}


/**
 * Modifier: bottom-align layout cells
 */
.o-layout--align-bottom {
  align-items: flex-end;
}


/**
 * Modifier: reverse all cells
 */
.o-layout--reverse {
  flex-direction: row-reverse;
}


/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */
.o-layout--fit {
  > .o-layout__cell {
    flex: 1 1 0%; /* [1] */
  }
}


/**
 * Modifier: all cells match height of tallest cell in a row
 * 1. The direct child of the flexbox must be a single element when you want
 *    to use equalheight
 */
.o-layout--equalheight {
  > .o-layout__cell {
    display: flex;

    > * {
      width: 100%; /* [1] */
    }
  }
}


/**
 * Modifier: Gutter-base
 */
.o-layout--gutter-base {
  @include tools.rem(margin-left, -(variables.$gutter-base));

  > .o-layout__cell {
    @include tools.rem(padding-left, variables.$gutter-base);
  }
}


/**
 * Modifier: Tiny gutter
 */
.o-layout--gutter-tiny {
  @include tools.rem(margin-left, -(variables.$gutter-tiny));

  > .o-layout__cell {
    @include tools.rem(padding-left, variables.$gutter-tiny);
  }
}


/**
 * Modifier: Small gutter
 */
.o-layout--gutter-small {
  @include tools.rem(margin-left, -(variables.$gutter-small));

  > .o-layout__cell {
    @include tools.rem(padding-left, variables.$gutter-small);
  }
}

/**
 * Modifier: Large gutter
 */
.o-layout--gutter-large {
  @include tools.rem(margin-left, -(variables.$gutter-large));

  > .o-layout__cell {
    @include tools.rem(padding-left, variables.$gutter-large);
  }
}

/**
 * Modifier: Huge gutter
 */
.o-layout--gutter-huge {
  @include tools.rem(margin-left, -(variables.$gutter-huge));

  > .o-layout__cell {
    @include tools.rem(padding-left, variables.$gutter-huge);
  }
}



/*  Responsive fitters & fillers
    ========================================================================= */

@include tools.breakpoint-has(variables.$fit-in-breakpoint, '.o-layout__cell--fit') {
  @include tools.fit;
}

@include tools.breakpoint-has(variables.$fill-in-breakpoint, '.o-layout__cell--fill') {
  @include tools.fill;
}
