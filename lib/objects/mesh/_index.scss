/*  =========================================================================
    objects.mesh
    ========================================================================= */

/*  Use/Forward rules
    `@use` or `@forward` everything you need here from other files.
    These can include variables, mixins & other includes.
    ========================================================================= */

/**
 * Forward the variables to the parent stylesheet
 */
@forward './variables';


/**
 * Use the settings & tools in this sheet
 */
@use './variables';
@use '../../tools';



/*  Module
    ========================================================================= */

/**
 * Block: mesh
 */
.o-mesh {
  --columns: #{variables.$columns};
  --gap: 0;
  --block-gap: var(--gap);
  --inline-gap: var(--gap);
  display: grid;
  grid-template-columns: repeat(var(--columns), 1fr);
  gap: var(--row-gap) var(--column-gap);
}


/**
 * Modifier: flow
 * Fluid width columns that break into more or less columns as space is available, with no media queries
 */
.o-mesh--flow {
  --min-inline-size: #{tools.functions-value-to-rem(variables.$flow-min-inline-size)};
  grid-template-columns: repeat(auto-fill, minmax(var(--min-inline-size), 1fr));
}


/**
 * Modifier: dense
 * Attempt to fill in holes earlier in the grid if smaller items come up later
 */
.o-mesh--dense {
  grid-auto-flow: dense;
}


/**
 * Modifier: gap-X
 */
@each $key, $value in variables.$gaps {
  .o-mesh--gap-#{$key} {
    --gap: #{tools.functions-value-to-rem($value)};
  }
}


/**
 * Element: cell
 */
.o-mesh__cell {
  --colstart: 0;
  --colspan: 1;
  grid-column-start: var(--colstart);
  grid-column-end: span var(--colspan);
}


/**
 * Element modifier: row
 * 1. Overwrite any previously set column start
 */
.o-mesh__cell--row {
  --colstart: 0; /* [1] */
  --colspan: 12;
}



/*  Responsive
    ========================================================================= */

/**
 * Element modifier: row
 * 1. Overwrite any previously set column start
 */
@include tools.mixins-breakpoint-has(variables.$row-in-breakpoint, '.o-mesh__cell--row') {
  --colstart: 0; /* [1] */
  --colspan: 12;
}
