/*! supple v0.0.1 | MIT License | github.com/supple-css */

/*  =========================================================================
    Supple
    In-browser CSS framework; Fluid, Variable, supple if you will
    ========================================================================= */

/*  Settings
    ========================================================================= */

/*! supple.settings.defaults | MIT License | github.com/supple-css */

/*  =========================================================================
    settings.defaults
    Supple default variables. Redefine and override them with your
    application-level variables.
    ========================================================================= */

/* stylelint-disable indentation */

:root {

/*  Typography
    ========================================================================= */

--supple-base-font-size: 16;
--supple-base-line-height: 24;
--supple-base-line-height-ratio: calc(var(--supple-base-line-height) / var(--supple-base-font-size));



/*  Spacing
    Assign our `--supple-base-line-height` to a new spacing variable for
    more transparency
    ========================================================================= */

--supple-space: calc(var(--supple-base-line-height-ratio) * 1rem);
--supple-space-tiny: calc(var(--supple-space) / 4);
--supple-space-small: calc(var(--supple-space) / 2);
--supple-space-large: calc(var(--supple-space) * 2);
--supple-space-huge: calc(var(--supple-space) * 4);

}

/*  Responsive
    Define your breakpoints. The variable name maps directly to the classes
    you can use (e.g. --lap maps to `classname@lap`), the second value is the media
    query that the breakpoint fires at.
    As per: https://drafts.csswg.org/mediaqueries-5/#custom-mq
    And: https://github.com/postcss/postcss-custom-media
    ========================================================================= */

/* stylelint-enable */

/*  Generic
    ========================================================================= */

/*! supple.generic.reset | MIT License | github.com/supple-css */

/*  =========================================================================
    generic.reset
    A thin layer on top of normalize.css that provides a starting point more
    suitable for web applications.
    ========================================================================= */

/**
 * 1. Set the global `box-sizing` state to `border-box`. As per:
 *    paulirish.com/2012/box-sizing-border-box-ftw
 * 2. Always add the horizontal scrollbar to prevent layout shifting
 * 3. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* [1] */
  overflow-y: scroll; /* [2] */
  min-height: 100%;
  -moz-osx-font-smoothing: grayscale; /* [3] */
  -webkit-font-smoothing: antialiased; /* [3] */
}

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; /* [1] */
}

/**
 * The usual resetting of margins, paddings, borders etc.
 */

blockquote,
dl,
dd,
ol,
ul,
h1,
h2,
h3,
h4,
h5,
h6,
p,
pre,
fieldset,
hr {
  margin: 0;
}

fieldset,
ol,
ul {
  padding: 0;
}

iframe,
fieldset {
  border: 0;
}

/**
 * Remove extra vertical spacing when nesting lists.
 */

li > ul,
li > ol {
  margin-bottom: 0;
}

/**
 * Suppress the focus outline on links that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */

[tabindex="-1"]:focus {
  outline: none !important;
}

/**
 * Image
 *
 * 1. By default all images are fluid
 * 2. Render `alt` visually offset when images don't load
 */

img {
  max-width: 100%; /* [1] */
  font-style: italic; /* [2] */
}

/*! supple.generic.vertical-rhythm | MIT License | github.com/supple-css */

/*  =========================================================================
    generic.vertical-rhythm
    Contains several high-level rulesets which apply a consistent, shared
    declaration (typically margins) across a number of elements.
    ========================================================================= */

/**
 * Toplevel HTML element
 * 1. Apply the `--supple-base-font-size` & `--supple-line-height-ratio`
 */

html {
  font-size: calc((var(--supple-base-font-size) / 16) * 1em); /* [1] */
  line-height: var(--supple-base-line-height-ratio); /* [1] */
}

/**
 * Applies vertical rhythm to designated elements
 * As per: http://csswizardry.com/2012/06/single-direction-margin-declarations
 */

hgroup,
ul,
ol,
dl,
blockquote,
p,
address,
table,
fieldset,
pre,
hr {
  margin-bottom: var(--supple-space);
}

/**
 * Default indentation value for lists
 */

ul,
ol,
dd {
  margin-left: var(--supple-space);
}

/*  Objects
    ========================================================================= */

/*! supple.objects.list-clean | MIT License | github.com/supple-css */

/*  =========================================================================
    objects.list-clean
    Strip appearance from lists by removing their bullets and indents
    ========================================================================= */

/*  Module
    ========================================================================= */

.o-list-clean {
  list-style: none;
  margin-left: 0;
}

/**
 * Item specific class
 * declaring this might for instance only be necessary on `dd` childs
 */

.o-list-clean__item {
  margin-left: 0;
}

/*! supple.objects.layout | MIT License | github.com/supple-css */

/*  =========================================================================
    objects.layout
    Fluid and nestable layout system based on flexbox.
    ========================================================================= */

/*  Variables
    ========================================================================= */

:root {
  --o-layout-columns: 12;
  --o-layout-colspan: var(--o-layout-columns);
  --o-layout-gutter: var(--supple-space, 24px);
  --o-layout-gutter-tiny: var(--supple-space-tiny, 6px);
  --o-layout-gutter-small: var(--supple-space-small, 12px);
  --o-layout-gutter-large: var(--supple-space-large, 48px);
  --o-layout-gutter-huge: var(--supple-space-huge, 96px);

  /**
   * @apply rule: Make a cell shrink wrap its content.
   */

  /**
   * @apply rule: Make a cell fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   */
}

/*  Layout root
    ========================================================================= */

/**
 * All content must be contained within child `o-layout__cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */

.o-layout {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; /* [1] */
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  padding: 0; /* [1] */
  margin-left: 0; /* [1] */
  list-style: none; /* [1] */
}

/**
 * Modifier: center align all layout cells
 */

.o-layout--align-center {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/**
 * Modifier: right align all layout cells
 */

.o-layout--align-right {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

/**
 * Modifier: middle-align layout cells
 */

.o-layout--align-middle {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

/**
 * Modifier: bottom-align layout cells
 */

.o-layout--align-bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

/**
 * Modifier: reverse all cells
 */

.o-layout--reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */

.o-layout--fit > .o-layout__cell {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* [1] */
}

/**
 * Modifier: all cells match height of tallest cell in a row
 * 1. The direct child of the flexbox must be a single element when you want
 *    to use equalheight
 */

.o-layout--equalheight > .o-layout__cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.o-layout--equalheight > .o-layout__cell > * {
  width: 100%; /* [1] */
}

/**
 * Modifier: Gutter
 */

.o-layout--gutter {
  margin-left: calc(-1 * var(--o-layout-gutter));
}

.o-layout--gutter > .o-layout__cell {
  padding-left: var(--o-layout-gutter);
}

/**
 * Modifier: Tiny gutter
 */

.o-layout--gutter-tiny {
  margin-left: calc(-1 * var(--o-layout-gutter-tiny));
}

.o-layout--gutter-tiny > .o-layout__cell {
  padding-left: var(--o-layout-gutter-tiny);
}

/**
 * Modifier: Small gutter
 */

.o-layout--gutter-small {
  margin-left: calc(-1 * var(--o-layout-gutter-small));
}

.o-layout--gutter-small > .o-layout__cell {
  padding-left: var(--o-layout-gutter-small);
}

/**
 * Modifier: Large gutter
 */

.o-layout--gutter-large {
  margin-left: calc(-1 * var(--o-layout-gutter-large));
}

.o-layout--gutter-large > .o-layout__cell {
  padding-left: var(--o-layout-gutter-large);
}

/**
 * Modifier: Huge gutter
 */

.o-layout--gutter-huge {
  margin-left: calc(-1 * var(--o-layout-gutter-huge));
}

.o-layout--gutter-huge > .o-layout__cell {
  padding-left: var(--o-layout-gutter-huge);
}

/*  Layout cell
    ========================================================================= */

/**
 * No explicit width by default. Rely on combining `o-layout__cell` with a
 * dimension utility or a component class that extends 'o-layout'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `o-layout__cell` container
 */

.o-layout__cell {
  flex-basis: calc(100% / var(--o-layout-columns) * var(--o-layout-colspan)); /* [1] */
  min-width: 0; /* [2] */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `o-layout` object.
 */

.o-layout__cell--center {
  margin-left: auto;
  margin-right: auto;
}

/**
 * Modifier: Make a cell shrink wrap its content.
 */

.o-layout__cell--fit {
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
}

/**
 * Modifier: Make a cell fill the remaining space.
 */

.o-layout__cell--fill {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* [1] */
  -ms-flex-preferred-size: 0%;
      flex-basis: 0%; /* [2] */
}

/*  Responsive
    ========================================================================= */

@media (min-width: 0) {
  .o-layout__cell--fit\@palm {
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
  }

  .o-layout__cell--fill\@palm {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* [1] */
  -ms-flex-preferred-size: 0%;
      flex-basis: 0%; /* [2] */
  }
}

@media (max-width: 639px) {
  .o-layout__cell--fit\@max-palm {
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
  }

  .o-layout__cell--fill\@max-palm {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* [1] */
  -ms-flex-preferred-size: 0%;
      flex-basis: 0%; /* [2] */
  }
}

@media (min-width: 640px) {
  .o-layout__cell--fit\@lap {
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
  }

  .o-layout__cell--fill\@lap {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* [1] */
  -ms-flex-preferred-size: 0%;
      flex-basis: 0%; /* [2] */
  }
}

@media (max-width: 1023px) {
  .o-layout__cell--fit\@max-lap {
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
  }

  .o-layout__cell--fill\@max-lap {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* [1] */
  -ms-flex-preferred-size: 0%;
      flex-basis: 0%; /* [2] */
  }
}

@media (min-width: 1024px) {
  .o-layout__cell--fit\@desk {
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
  }

  .o-layout__cell--fill\@desk {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* [1] */
  -ms-flex-preferred-size: 0%;
      flex-basis: 0%; /* [2] */
  }
}

@media (min-width: 1199px) {
  .o-layout__cell--fit\@max-desk {
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
  }

  .o-layout__cell--fill\@max-desk {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* [1] */
  -ms-flex-preferred-size: 0%;
      flex-basis: 0%; /* [2] */
  }
}

@media (min-width: 1200px) {
  .o-layout__cell--fit\@wall {
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
  }

  .o-layout__cell--fill\@wall {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* [1] */
  -ms-flex-preferred-size: 0%;
      flex-basis: 0%; /* [2] */
  }
}

/*! supple.objects.flexembed | MIT License | github.com/supple-css */

/*  =========================================================================
    objects.flexembed
    For use with multi-media embeds, such as videos or slideshows, that need to
    retain a specific aspect ratio but adapt to elements of variable widths.
    ========================================================================= */

/*  Variables
    ========================================================================= */

:root {
  --o-flexembed-width: 1;
  --o-flexembed-height: 1;
}

/*  Module
    ========================================================================= */

/**
 * 1. Default cropping is a perfect square
 */

.o-flexembed {
  position: relative;
  display: block;
  height: 0;
  padding: 0;
  overflow: hidden;
  padding-bottom: calc((var(--o-flexembed-height) / var(--o-flexembed-width)) * 100%); /* [1] */
}

/**
 * The actual embed/item
 */

.o-flexembed__item,
.o-flexembed > iframe,
.o-flexembed > embed,
.o-flexembed > object {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

/*  Ratio modifiers
    ========================================================================= */

.o-flexembed--4by3 {
  padding-bottom: calc((3/4) * 100%);
}

.o-flexembed--16by9 {
  padding-bottom: calc((9/16) * 100%);
}

.o-flexembed--2by1 {
  padding-bottom: calc((1/2) * 100%);
}
